$date
	Thu Jun 22 22:25:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! m [3:0] $end
$var reg 1 " s $end
$var reg 4 # x [3:0] $end
$var reg 4 $ y [3:0] $end
$scope module u0 $end
$var wire 1 " s $end
$var wire 4 % x [3:0] $end
$var wire 4 & y [3:0] $end
$var wire 4 ' m [3:0] $end
$scope module u0 $end
$var wire 1 " s $end
$var wire 1 ( x $end
$var wire 1 ) y $end
$var wire 1 * m $end
$upscope $end
$scope module u1 $end
$var wire 1 " s $end
$var wire 1 + x $end
$var wire 1 , y $end
$var wire 1 - m $end
$upscope $end
$scope module u2 $end
$var wire 1 " s $end
$var wire 1 . x $end
$var wire 1 / y $end
$var wire 1 0 m $end
$upscope $end
$scope module u3 $end
$var wire 1 " s $end
$var wire 1 1 x $end
$var wire 1 2 y $end
$var wire 1 3 m $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#10
b1 !
b1 '
1*
1,
1(
b10 $
b10 &
b1 #
b1 %
#30
0*
b100 !
b100 '
10
0,
1/
1+
1"
b100 $
b100 &
b11 #
b11 %
#100
